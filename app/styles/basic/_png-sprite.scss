// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$browse-icon-name: 'browse-icon';
$browse-icon-x: 176px;
$browse-icon-y: 0px;
$browse-icon-offset-x: -176px;
$browse-icon-offset-y: 0px;
$browse-icon-width: 27px;
$browse-icon-height: 26px;
$browse-icon-total-width: 631px;
$browse-icon-total-height: 36px;
$browse-icon-image: 'png-sprite.png';
$browse-icon: (176px, 0px, -176px, 0px, 27px, 26px, 631px, 36px, 'png-sprite.png', 'browse-icon', );
$fb-hover-name: 'fb-hover';
$fb-hover-x: 243px;
$fb-hover-y: 0px;
$fb-hover-offset-x: -243px;
$fb-hover-offset-y: 0px;
$fb-hover-width: 31px;
$fb-hover-height: 30px;
$fb-hover-total-width: 631px;
$fb-hover-total-height: 36px;
$fb-hover-image: 'png-sprite.png';
$fb-hover: (243px, 0px, -243px, 0px, 31px, 30px, 631px, 36px, 'png-sprite.png', 'fb-hover', );
$fb-name: 'fb';
$fb-x: 314px;
$fb-y: 0px;
$fb-offset-x: -314px;
$fb-offset-y: 0px;
$fb-width: 31px;
$fb-height: 30px;
$fb-total-width: 631px;
$fb-total-height: 36px;
$fb-image: 'png-sprite.png';
$fb: (314px, 0px, -314px, 0px, 31px, 30px, 631px, 36px, 'png-sprite.png', 'fb', );
$hearth-icon-name: 'hearth-icon';
$hearth-icon-x: 0px;
$hearth-icon-y: 0px;
$hearth-icon-offset-x: 0px;
$hearth-icon-offset-y: 0px;
$hearth-icon-width: 11px;
$hearth-icon-height: 10px;
$hearth-icon-total-width: 631px;
$hearth-icon-total-height: 36px;
$hearth-icon-image: 'png-sprite.png';
$hearth-icon: (0px, 0px, 0px, 0px, 11px, 10px, 631px, 36px, 'png-sprite.png', 'hearth-icon', );
$mouse-icon-name: 'mouse-icon';
$mouse-icon-x: 51px;
$mouse-icon-y: 0px;
$mouse-icon-offset-x: -51px;
$mouse-icon-offset-y: 0px;
$mouse-icon-width: 19px;
$mouse-icon-height: 36px;
$mouse-icon-total-width: 631px;
$mouse-icon-total-height: 36px;
$mouse-icon-image: 'png-sprite.png';
$mouse-icon: (51px, 0px, -51px, 0px, 19px, 36px, 631px, 36px, 'png-sprite.png', 'mouse-icon', );
$search-icon-name: 'search-icon';
$search-icon-x: 110px;
$search-icon-y: 0px;
$search-icon-offset-x: -110px;
$search-icon-offset-y: 0px;
$search-icon-width: 26px;
$search-icon-height: 25px;
$search-icon-total-width: 631px;
$search-icon-total-height: 36px;
$search-icon-image: 'png-sprite.png';
$search-icon: (110px, 0px, -110px, 0px, 26px, 25px, 631px, 36px, 'png-sprite.png', 'search-icon', );
$tw-hover-name: 'tw-hover';
$tw-hover-x: 385px;
$tw-hover-y: 0px;
$tw-hover-offset-x: -385px;
$tw-hover-offset-y: 0px;
$tw-hover-width: 31px;
$tw-hover-height: 30px;
$tw-hover-total-width: 631px;
$tw-hover-total-height: 36px;
$tw-hover-image: 'png-sprite.png';
$tw-hover: (385px, 0px, -385px, 0px, 31px, 30px, 631px, 36px, 'png-sprite.png', 'tw-hover', );
$tw-name: 'tw';
$tw-x: 456px;
$tw-y: 0px;
$tw-offset-x: -456px;
$tw-offset-y: 0px;
$tw-width: 31px;
$tw-height: 30px;
$tw-total-width: 631px;
$tw-total-height: 36px;
$tw-image: 'png-sprite.png';
$tw: (456px, 0px, -456px, 0px, 31px, 30px, 631px, 36px, 'png-sprite.png', 'tw', );
$vk-hover-name: 'vk-hover';
$vk-hover-x: 527px;
$vk-hover-y: 0px;
$vk-hover-offset-x: -527px;
$vk-hover-offset-y: 0px;
$vk-hover-width: 32px;
$vk-hover-height: 30px;
$vk-hover-total-width: 631px;
$vk-hover-total-height: 36px;
$vk-hover-image: 'png-sprite.png';
$vk-hover: (527px, 0px, -527px, 0px, 32px, 30px, 631px, 36px, 'png-sprite.png', 'vk-hover', );
$vk-name: 'vk';
$vk-x: 599px;
$vk-y: 0px;
$vk-offset-x: -599px;
$vk-offset-y: 0px;
$vk-width: 32px;
$vk-height: 30px;
$vk-total-width: 631px;
$vk-total-height: 36px;
$vk-image: 'png-sprite.png';
$vk: (599px, 0px, -599px, 0px, 32px, 30px, 631px, 36px, 'png-sprite.png', 'vk', );
$spritesheet-width: 631px;
$spritesheet-height: 36px;
$spritesheet-image: 'png-sprite.png';
$spritesheet-sprites: ($browse-icon, $fb-hover, $fb, $hearth-icon, $mouse-icon, $search-icon, $tw-hover, $tw, $vk-hover, $vk, );
$spritesheet: (631px, 36px, 'png-sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
